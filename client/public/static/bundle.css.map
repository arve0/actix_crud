{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/Login.svelte",
    "../../src/CRUD.svelte",
    "../../src/InputForm.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Login from './Login.svelte';\n    import CRUD from './CRUD.svelte';\n    import { loggedIn, username } from './user.service.js';\n\n    let showLogin = !$loggedIn;\n    let showRegister = false;\n\n    function showLoginDialog() {\n        showRegister = false;\n        showLogin = true;\n    }\n\n    function showRegisterDialog() {\n        showLogin = false;\n        showRegister = true;\n    }\n</script>\n\n<header>\n    <div class=brand>\n        <a href=\"/\">actix crud</a>\n    </div>\n    <div class=menu></div>\n    <div class=login>\n        {#if $loggedIn}\n            <a class=button href=\"/user/logout\">Logout ({$username})</a>\n        {:else if showRegister}\n            <button on:click={showLoginDialog}>Log in</button>\n        {:else if showLogin}\n            <button on:click={showRegisterDialog}>Register</button>\n        {/if}\n    </div>\n</header>\n\n<main>\n    {#if $loggedIn}\n        <CRUD />\n    {:else if showLogin}\n        <Login />\n    {:else if showRegister}\n        <Login type=register />\n    {/if}\n</main>\n\n<style>\n    header {\n        background-color: aquamarine;\n        padding: 1em;\n        display: grid;\n        grid-template-columns: max-content auto max-content;\n    }\n    header .brand {\n        align-self: center;\n    }\n    header .login > * {\n        margin: 0;\n    }\n    main {\n        margin-top: 4em;\n        margin-left: 0.5em;\n        margin-right: 0.5em;\n        margin-bottom: 1em;\n    }\n    @media screen and (min-width: 768px) {\n        main {\n            margin-left: 2em;\n            margin-right: 2em;\n        }\n    }\n</style>\n",
    "<script>\n    export let type = 'login';\n    let prettyType = type[0].toUpperCase() + type.slice(1);\n</script>\n\n<h1>{prettyType}</h1>\n<form action=\"/user/{type}\" method=\"POST\">\n\n    <label for=username>Username</label>\n    <input id=username name=username>\n\n    <label for=password>Password</label>\n    <input id=password name=password type=password>\n\n    <button type=submit class=button>{prettyType}</button>\n</form>\n\n<style>\n    label, button {\n        display: block;\n    }\n</style>\n",
    "<script>\n    import InputForm from './InputForm.svelte';\n    import { documents } from './document.service.js';\n\n    let show_input_form = false\n    let document = {}\n\n    function create() {\n        document = {\n            id: null,\n            data: {\n                date: \"\",\n                description: \"\",\n                amount: 0,\n                done: false,\n            }\n        }\n        show_input_form = true\n    }\n    function edit(doc) {\n        document = doc\n        show_input_form = true\n    }\n    function done() {\n        show_input_form = false\n        document = {}\n    }\n    function delete_(id) {\n        if (document.id === id) {\n            show_input_form = false\n            document = {}\n        }\n        documents.delete_(id)\n    }\n</script>\n\n<h1>Documents</h1>\n{#if $documents.length}\n    <table class=table>\n        <thead>\n            <tr>\n                <!-- <th>id</th> -->\n                <th>date</th>\n                <th>description</th>\n                <th>amount</th>\n                <th>done</th>\n                <th>actions</th>\n            </tr>\n        </thead>\n    {#each $documents as doc (doc.id)}\n        <tr>\n            <!-- <td>{doc.id}</td> -->\n            <td>{doc.data.date}</td>\n            <td>{doc.data.description}</td>\n            <td>{doc.data.amount}</td>\n            <td>{doc.data.done ? \"✅\" : \"❌\"}</td>\n            <td>\n                <button on:click={() => edit(doc)}>Edit</button>\n                <button on:click={() => delete_(doc.id)}>Delete</button>\n            </td>\n        </tr>\n    {/each}\n    </table>\n    {/if}\n    {#if show_input_form}\n    <InputForm\n    document={document}\n    on:done={done}\n    />\n    {:else}\n    <button on:click={create}>Create new document</button>\n{/if}\n\n<style>\n    table {\n        width: 100%;\n        margin-top: 1em;\n        margin-bottom: 2em;\n        border-collapse: collapse;\n    }\n    th, td {\n        text-align: left;\n        border-bottom-color: #222;\n        border-bottom-style: solid;\n        border-bottom-width: 1px;\n        padding: 0.5em;\n    }\n    td button {\n        margin: 0;\n    }\n</style>\n",
    "<script>\n    import { documents } from './document.service.js';\n    import { createEventDispatcher } from 'svelte'\n\n    export let document;\n    $: data = document.data;\n    $: isNew = document.id === null;\n    $: title = isNew ? \"New\" : \"Edit\";\n\n    const dispatch = createEventDispatcher()\n\n    function submit(event) {\n        event.preventDefault()\n\n        if (isNew) {\n            documents.create(data).then(() => dispatch(\"done\"))\n        } else {\n            documents.put(document).then(() => dispatch(\"done\"))\n        }\n    }\n</script>\n\n<h2 class=\"subtitle\">{title} document</h2>\n<form on:submit={submit}>\n    <label for=date>Date</label>\n    <input id=date type=date bind:value={data.date}>\n\n    <label for=description>Description</label>\n    <input id=description type=text bind:value={data.description}>\n\n    <label for=amount>Amount</label>\n    <input id=amount type=number bind:value={data.amount}>\n\n    <label for=done>Done</label>\n    <input id=done type=checkbox bind:checked={data.done}>\n\n    <div class=action>\n        <button type=submit>Save</button>\n        <button on:click={() => dispatch(\"done\")}>Cancel</button>\n    </div>\n</form>\n\n<style>\n    label {\n        display: block;\n    }\n    .action {\n        margin-top: 1.5em;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA8CI,MAAM,cAAC,CAAC,AACJ,gBAAgB,CAAE,UAAU,CAC5B,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,WAAW,CAAC,IAAI,CAAC,WAAW,AACvD,CAAC,AACD,oBAAM,CAAC,MAAM,cAAC,CAAC,AACX,UAAU,CAAE,MAAM,AACtB,CAAC,AACD,oBAAM,CAAC,MAAM,CAAG,cAAE,CAAC,AACf,MAAM,CAAE,CAAC,AACb,CAAC,AACD,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,GAAG,CACf,WAAW,CAAE,KAAK,CAClB,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,GAAG,AACtB,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAClC,IAAI,cAAC,CAAC,AACF,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,GAAG,AACrB,CAAC,AACL,CAAC;ACnDD,mBAAK,CAAE,MAAM,cAAC,CAAC,AACX,OAAO,CAAE,KAAK,AAClB,CAAC;ACsDD,KAAK,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,QAAQ,AAC7B,CAAC,AACD,iBAAE,CAAE,EAAE,eAAC,CAAC,AACJ,UAAU,CAAE,IAAI,CAChB,mBAAmB,CAAE,IAAI,CACzB,mBAAmB,CAAE,KAAK,CAC1B,mBAAmB,CAAE,GAAG,CACxB,OAAO,CAAE,KAAK,AAClB,CAAC,AACD,iBAAE,CAAC,MAAM,eAAC,CAAC,AACP,MAAM,CAAE,CAAC,AACb,CAAC;AC9CD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,KAAK,AAClB,CAAC,AACD,OAAO,cAAC,CAAC,AACL,UAAU,CAAE,KAAK,AACrB,CAAC"
}