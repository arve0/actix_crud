{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Login.svelte","../../node_modules/svelte/store/index.mjs","../../src/user.service.js","../../src/document.service.js","../../src/InputForm.svelte","../../src/CRUD.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_input_value, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n    export let type = 'login';\n    let prettyType = type[0].toUpperCase() + type.slice(1);\n</script>\n\n<h1>{prettyType}</h1>\n<form action=\"/user/{type}\" method=\"POST\">\n\n    <label for=username>Username</label>\n    <input id=username name=username>\n\n    <label for=password>Password</label>\n    <input id=password name=password type=password>\n\n    <button type=submit class=button>{prettyType}</button>\n</form>\n\n<style>\n    label, button {\n        display: block;\n    }\n</style>\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from 'svelte/store';\n\n// \"pre-fetch\"\nconst _username = fetch('/user').then(r => {\n    if (r.status !== 200) {\n        return null;\n    }\n    return r.text();\n});\n\nexport const username = readable(null, set => {\n    _username.then(set);\n});\n\nexport const loggedIn = readable(false, set => {\n    _username.then(u => u !== null).then(set);\n});\n\nexport const loggedInPromise = _username.then(u => u !== null);\n","import { writable } from \"svelte/store\";\nimport { loggedInPromise } from './user.service.js'\n\nconst BASE_URL = \"/document\"\n\n// \"pre-fetch\"\nconst _initial_documents = loggedInPromise.then(isLoggedIn => {\n    if (isLoggedIn) {\n        return fetch(BASE_URL);\n    }\n    return {} // empty response\n}).then(response => {\n    if (response.status !== 200) {\n        return [];\n    }\n    return response.json();\n});\n\nconst { set, subscribe, update } = writable([], set => _initial_documents.then(set));\n\nasync function create(data) {\n    let response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(data)\n    })\n\n    if (response.status !== 201) {\n        let msg = await response.text();\n        throw new Error(`HTTP status ${response.status}, message '${msg}'`);\n    }\n    let id = await response.text();\n    update(documents => [...documents, { id, data }])\n}\n\nasync function delete_(id) {\n    let response = await fetch(`${BASE_URL}/${id}`, {\n        method: \"DELETE\"\n    })\n    if (response.status !== 200) {\n        let msg = await response.text();\n        throw new Error(`HTTP status ${response.status}, message '${msg}'`);\n    }\n    update(documents => {\n        const i = documents.findIndex(o => o.id === id)\n\n        if (i === -1) {\n            throw new Error(`Expected to find id ${id}, but did not.`)\n        }\n\n        return [\n            ...documents.slice(0, i),\n            ...documents.slice(i + 1)\n        ]\n    })\n}\n\nasync function put(document) {\n    let { id, data } = document;\n\n    let response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'PUT',\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(data)\n    })\n\n    if (response.status !== 200) {\n        let msg = await response.text();\n        throw new Error(`HTTP status ${response.status}, message '${msg}'`);\n    }\n    update(documents => {\n        const i = documents.findIndex(o => o.id === id)\n\n        if (i === -1) {\n          throw new Error(`Expected to find id ${id}, but did not.`)\n        }\n\n        return [\n            ...documents.slice(0, i),\n            document,\n            ...documents.slice(i + 1)\n        ]\n    })\n}\n\nconst updates = new EventSource(\"/updates\")\nupdates.addEventListener(\"insert\", (event) => {\n    let document = JSON.parse(event.data);\n    update(documents => [...documents, document]);\n});\n\nupdates.addEventListener(\"update\", (event) => {\n    let document = JSON.parse(event.data);\n    update(documents => documents.map(d =>\n        d.id === document.id\n            ? document\n            : d\n    ))\n});\n\nupdates.addEventListener(\"delete\", (event) => {\n    let id = event.data;\n    update(documents => documents.filter(d => d.id !== id))\n});\n\n\nexport const documents = { create, delete_, subscribe, put };\n","<script>\n    import { documents } from './document.service.js';\n    import { createEventDispatcher } from 'svelte'\n\n    export let document;\n    $: data = document.data;\n    $: isNew = document.id === null;\n    $: title = isNew ? \"New\" : \"Edit\";\n\n    const dispatch = createEventDispatcher()\n\n    function submit(event) {\n        event.preventDefault()\n\n        if (isNew) {\n            documents.create(data).then(() => dispatch(\"done\"))\n        } else {\n            documents.put(document).then(() => dispatch(\"done\"))\n        }\n    }\n</script>\n\n<h2 class=\"subtitle\">{title} document</h2>\n<form on:submit={submit}>\n    <label for=date>Date</label>\n    <input id=date type=date bind:value={data.date}>\n\n    <label for=description>Description</label>\n    <input id=description type=text bind:value={data.description}>\n\n    <label for=amount>Amount</label>\n    <input id=amount type=number bind:value={data.amount}>\n\n    <label for=done>Done</label>\n    <input id=done type=checkbox bind:checked={data.done}>\n\n    <div class=action>\n        <button type=submit>Save</button>\n        <button on:click={() => dispatch(\"done\")}>Cancel</button>\n    </div>\n</form>\n\n<style>\n    label {\n        display: block;\n    }\n    .action {\n        margin-top: 1.5em;\n    }\n</style>\n","<script>\n    import InputForm from './InputForm.svelte';\n    import { documents } from './document.service.js';\n\n    let show_input_form = false\n    let document = {}\n\n    function create() {\n        document = {\n            id: null,\n            data: {\n                date: \"\",\n                description: \"\",\n                amount: 0,\n                done: false,\n            }\n        }\n        show_input_form = true\n    }\n    function edit(doc) {\n        document = doc\n        show_input_form = true\n    }\n    function done() {\n        show_input_form = false\n        document = {}\n    }\n    function delete_(id) {\n        if (document.id === id) {\n            show_input_form = false\n            document = {}\n        }\n        documents.delete_(id)\n    }\n</script>\n\n<h1>Documents</h1>\n{#if $documents.length}\n    <table class=table>\n        <thead>\n            <tr>\n                <!-- <th>id</th> -->\n                <th>date</th>\n                <th>description</th>\n                <th>amount</th>\n                <th>done</th>\n                <th>actions</th>\n            </tr>\n        </thead>\n    {#each $documents as doc (doc.id)}\n        <tr>\n            <!-- <td>{doc.id}</td> -->\n            <td>{doc.data.date}</td>\n            <td>{doc.data.description}</td>\n            <td>{doc.data.amount}</td>\n            <td>{doc.data.done ? \"✅\" : \"❌\"}</td>\n            <td>\n                <button on:click={() => edit(doc)}>Edit</button>\n                <button on:click={() => delete_(doc.id)}>Delete</button>\n            </td>\n        </tr>\n    {/each}\n    </table>\n    {/if}\n    {#if show_input_form}\n    <InputForm\n    document={document}\n    on:done={done}\n    />\n    {:else}\n    <button on:click={create}>Create new document</button>\n{/if}\n\n<style>\n    table {\n        width: 100%;\n        margin-top: 1em;\n        margin-bottom: 2em;\n        border-collapse: collapse;\n    }\n    th, td {\n        text-align: left;\n        border-bottom-color: #222;\n        border-bottom-style: solid;\n        border-bottom-width: 1px;\n        padding: 0.5em;\n    }\n    td button {\n        margin: 0;\n    }\n</style>\n","<script>\n    import Login from './Login.svelte';\n    import CRUD from './CRUD.svelte';\n    import { loggedIn, username } from './user.service.js';\n\n    let showLogin = !$loggedIn;\n    let showRegister = false;\n\n    function showLoginDialog() {\n        showRegister = false;\n        showLogin = true;\n    }\n\n    function showRegisterDialog() {\n        showLogin = false;\n        showRegister = true;\n    }\n</script>\n\n<header>\n    <div class=brand>\n        <a href=\"/\">actix crud</a>\n    </div>\n    <div class=menu></div>\n    <div class=login>\n        {#if $loggedIn}\n            <a class=button href=\"/user/logout\">Logout ({$username})</a>\n        {:else if showRegister}\n            <button on:click={showLoginDialog}>Log in</button>\n        {:else if showLogin}\n            <button on:click={showRegisterDialog}>Register</button>\n        {/if}\n    </div>\n</header>\n\n<main>\n    {#if $loggedIn}\n        <CRUD />\n    {:else if showLogin}\n        <Login />\n    {:else if showRegister}\n        <Login type=register />\n    {/if}\n</main>\n\n<style>\n    header {\n        background-color: aquamarine;\n        padding: 1em;\n        display: grid;\n        grid-template-columns: max-content auto max-content;\n    }\n    header .brand {\n        align-self: center;\n    }\n    header .login > * {\n        margin: 0;\n    }\n    main {\n        margin-top: 4em;\n        margin-left: 0.5em;\n        margin-right: 0.5em;\n        margin-bottom: 1em;\n    }\n    @media screen and (min-width: 768px) {\n        main {\n            margin-left: 2em;\n            margin-right: 2em;\n        }\n    }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n    target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_input_value","input","current_component","set_current_component","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","destroy_block","lookup","key","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","prettyType","toUpperCase","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","_username","fetch","status","username","loggedIn","u","loggedInPromise","BASE_URL","_initial_documents","isLoggedIn","response","json","updates","EventSource","JSON","parse","documents","id","async","method","headers","content-type","body","stringify","msg","Error","delete_","findIndex","put","title","submit","date","description","amount","done","dispatch","isNew","preventDefault","undefined","$documents","doc","old_blocks","changed","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","Math","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","click_handler","click_handler_1","show_input_form","edit","showRegisterDialog","showLoginDialog","$username","$loggedIn","showRegister","showLogin"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAmBhF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAV5B,SAAmBJ,EAAOC,GACtB,MAAMI,EAAQL,EAAMM,UAAUL,GAC9B,OAAOI,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUN,EAAOC,IAqFlD,SAASO,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAqBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GAuB1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAErBvB,EAAK0B,aAAaH,EAAWC,GAuErC,SAASG,EAASf,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IACdD,EAAKC,KAAOA,GAEpB,SAASe,EAAgBC,EAAOL,IACf,MAATA,GAAiBK,EAAML,SACvBK,EAAML,MAAQA,GA+NtB,IAAIM,EACJ,SAASC,EAAsB1C,GAC3ByC,EAAoBzC,EAmBxB,SAAS2C,IACL,MAAM3C,EAAYyC,EAClB,MAAO,CAACG,EAAMC,KACV,MAAMC,EAAY9C,EAAUG,GAAG2C,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMlB,EAxLlB,SAAsBgB,EAAMC,GACxB,MAAME,EAAI1B,SAAS2B,YAAY,eAE/B,OADAD,EAAEE,gBAAgBL,GAAM,GAAO,EAAOC,GAC/BE,EAqLeG,CAAaN,EAAMC,GACjCC,EAAUK,QAAQ1D,QAAQN,IACtBA,EAAGiE,KAAKpD,EAAW4B,OAqBnC,MAAMyB,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoB1E,GACzBoE,EAAiBlD,KAAKlB,GAK1B,SAAS2E,IACL,MAAMC,EAAiB,IAAIC,IAC3B,EAAG,CAGC,KAAOX,EAAiBY,QAAQ,CAC5B,MAAMjE,EAAYqD,EAAiBa,QACnCxB,EAAsB1C,GACtBmE,EAAOnE,EAAUG,IAErB,KAAOmD,EAAkBW,QACrBX,EAAkBc,KAAlBd,GAIJ,IAAK,IAAIe,EAAI,EAAGA,EAAId,EAAiBU,OAAQI,GAAK,EAAG,CACjD,MAAMnE,EAAWqD,EAAiBc,GAC7BN,EAAeO,IAAIpE,KACpBA,IAEA6D,EAAeQ,IAAIrE,IAG3BqD,EAAiBU,OAAS,QACrBZ,EAAiBY,QAC1B,KAAOT,EAAgBS,QACnBT,EAAgBY,KAAhBZ,GAEJI,GAAmB,EAEvB,SAASO,EAAOhE,GACRA,EAAGqE,WACHrE,EAAGgE,OAAOhE,EAAGsE,OACblF,EAAQY,EAAGuE,eACXvE,EAAGqE,SAASG,EAAExE,EAAGsE,MAAOtE,EAAGyE,KAC3BzE,EAAGsE,MAAQ,KACXtE,EAAG0E,aAAapF,QAAQoE,IAiBhC,MAAMiB,EAAW,IAAId,IACrB,IAAIe,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACR1F,EAAQwF,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMhB,IACfS,EAASS,OAAOF,GAChBA,EAAMhB,EAAEiB,IAGhB,SAASE,EAAeH,EAAOC,EAAOtE,EAAQd,GAC1C,GAAImF,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASR,IAAIe,GACb,OACJP,EAASP,IAAIc,GACbN,EAAOG,EAAE7E,KAAK,KACVyE,EAASS,OAAOF,GACZnF,IACIc,GACAqE,EAAMK,EAAE,GACZxF,OAGRmF,EAAMI,EAAEH,IAgShB,SAASK,EAAcN,EAAOO,GAC1BP,EAAMK,EAAE,GACRE,EAAOL,OAAOF,EAAMQ,KA6OxB,SAASC,EAAgB9F,EAAWU,EAAQI,GACxC,MAAM0D,SAAEA,EAAQuB,SAAEA,EAAQ3F,WAAEA,EAAUyE,aAAEA,GAAiB7E,EAAUG,GACnEqE,EAASwB,EAAEtF,EAAQI,GAEnB+C,EAAoB,KAChB,MAAMoC,EAAiBF,EAASG,IAAIhH,GAAKiH,OAAOzG,GAC5CU,EACAA,EAAWC,QAAQ4F,GAKnB1G,EAAQ0G,GAEZjG,EAAUG,GAAG4F,SAAW,KAE5BlB,EAAapF,QAAQoE,GAEzB,SAASuC,EAAkBpG,EAAWqG,GAC9BrG,EAAUG,GAAGqE,WACbjF,EAAQS,EAAUG,GAAGC,YACrBJ,EAAUG,GAAGqE,SAASkB,EAAEW,GAGxBrG,EAAUG,GAAGC,WAAaJ,EAAUG,GAAGqE,SAAW,KAClDxE,EAAUG,GAAGyE,IAAM,IAG3B,SAAS0B,EAAWtG,EAAW6F,GACtB7F,EAAUG,GAAGsE,QACdpB,EAAiBhD,KAAKL,GAnpBrB4D,IACDA,GAAmB,EACnBH,EAAiB8C,KAAKzC,IAmpBtB9D,EAAUG,GAAGsE,MAAQrF,KAEzBY,EAAUG,GAAGsE,MAAMoB,IAAO,EAE9B,SAASW,EAAKxG,EAAW8B,EAAS2E,EAAUC,EAAiBC,EAAWC,GACpE,MAAMC,EAAmBpE,EACzBC,EAAsB1C,GACtB,MAAM8G,EAAQhF,EAAQgF,OAAS,GACzB3G,EAAKH,EAAUG,GAAK,CACtBqE,SAAU,KACVI,IAAK,KAELkC,MAAOF,EACPzC,OAAQlF,EACR0H,UAAAA,EACAI,MAAO3H,IAEP2G,SAAU,GACV3F,WAAY,GACZsE,cAAe,GACfG,aAAc,GACdmC,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiB1G,GAAG6G,QAAU,IAElElE,UAAW1D,IACXqF,MAAO,MAEX,IAAIyC,GAAQ,EA3+BhB,IAAkB/F,EA4+BdhB,EAAGyE,IAAM6B,EACHA,EAASzG,EAAW8G,EAAO,CAACjB,EAAK1D,KAC3BhC,EAAGyE,KAAO+B,EAAUxG,EAAGyE,IAAIiB,GAAM1F,EAAGyE,IAAIiB,GAAO1D,KAC3ChC,EAAG4G,MAAMlB,IACT1F,EAAG4G,MAAMlB,GAAK1D,GACd+E,GACAZ,EAAWtG,EAAW6F,MAGhCiB,EACN3G,EAAGgE,SACH+C,GAAQ,EACR3H,EAAQY,EAAGuE,eACXvE,EAAGqE,SAAWkC,EAAgBvG,EAAGyE,KAC7B9C,EAAQpB,SACJoB,EAAQqF,QAERhH,EAAGqE,SAAS4C,GA7/BNjG,EA6/BiBW,EAAQpB,OA5/BhC2G,MAAMC,KAAKnG,EAAQoG,cAggClBpH,EAAGqE,SAASU,IAEZpD,EAAQ0F,OACRpC,EAAcpF,EAAUG,GAAGqE,UAC/BsB,EAAgB9F,EAAW8B,EAAQpB,OAAQoB,EAAQhB,QACnDgD,KAEJpB,EAAsBmE,GAsC1B,MAAMY,EACFC,WACItB,EAAkBuB,KAAM,GACxBA,KAAKC,SAAW3I,EAEpByI,IAAI9E,EAAM1C,GACN,MAAM4C,EAAa6E,KAAKxH,GAAG2C,UAAUF,KAAU+E,KAAKxH,GAAG2C,UAAUF,GAAQ,IAEzE,OADAE,EAAUzC,KAAKH,GACR,KACH,MAAM2H,EAAQ/E,EAAUgF,QAAQ5H,IACjB,IAAX2H,GACA/E,EAAUiF,OAAOF,EAAO,IAGpCH,oFCpzCCM,gLASiCA,oTARjBpF,6KAAAA,6EALV,SAAIA,EAAO,WACdoF,EAAapF,EAAK,GAAGqF,cAAgBrF,EAAKO,MAAM,gJCCxD,MAAM+E,EAAmB,GAMzB,SAASC,EAAShG,EAAOiG,GACrB,MAAO,CACH7H,UAAW8H,EAASlG,EAAOiG,GAAO7H,WAQ1C,SAAS8H,EAASlG,EAAOiG,EAAQnJ,GAC7B,IAAIqJ,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAI7I,EAAeuC,EAAOsG,KACtBtG,EAAQsG,EACJH,GAAM,CACN,MAAMI,GAAaR,EAAiBjE,OACpC,IAAK,IAAII,EAAI,EAAGA,EAAIkE,EAAYtE,OAAQI,GAAK,EAAG,CAC5C,MAAMsE,EAAIJ,EAAYlE,GACtBsE,EAAE,KACFT,EAAiB7H,KAAKsI,EAAGxG,GAE7B,GAAIuG,EAAW,CACX,IAAK,IAAIrE,EAAI,EAAGA,EAAI6D,EAAiBjE,OAAQI,GAAK,EAC9C6D,EAAiB7D,GAAG,GAAG6D,EAAiB7D,EAAI,IAEhD6D,EAAiBjE,OAAS,IA0B1C,MAAO,CAAEuE,IAAAA,EAAKrE,OArBd,SAAgBhF,GACZqJ,EAAIrJ,EAAGgD,KAoBW5B,UAlBtB,SAAmBrB,EAAK0J,EAAa3J,GACjC,MAAM4J,EAAa,CAAC3J,EAAK0J,GAMzB,OALAL,EAAYlI,KAAKwI,GACU,IAAvBN,EAAYtE,SACZqE,EAAOF,EAAMI,IAAQvJ,GAEzBC,EAAIiD,GACG,KACH,MAAM0F,EAAQU,EAAYT,QAAQe,IACnB,IAAXhB,GACAU,EAAYR,OAAOF,EAAO,GAEH,IAAvBU,EAAYtE,SACZqE,IACAA,EAAO,SCvDvB,MAAMQ,EAAYC,MAAM,SAASxC,KAAKtB,GACjB,MAAbA,EAAE+D,OACK,KAEJ/D,EAAE1D,QAGA0H,EAAWd,EAAS,KAAMK,IACnCM,EAAUvC,KAAKiC,KAGNU,EAAWf,GAAS,EAAOK,IACpCM,EAAUvC,KAAK4C,GAAW,OAANA,GAAY5C,KAAKiC,KAG5BY,EAAkBN,EAAUvC,KAAK4C,GAAW,OAANA,GCf7CE,EAAW,YAGXC,EAAqBF,EAAgB7C,KAAKgD,GACxCA,EACOR,MAAMM,GAEV,IACR9C,KAAKiD,GACoB,MAApBA,EAASR,OACF,GAEJQ,EAASC,SAGdjB,IAAEA,YAAKjI,UAAW4D,IAAWkE,EAAS,GAAIG,GAAOc,EAAmB/C,KAAKiC,IAmE/E,MAAMkB,GAAU,IAAIC,YAAY,YAChCD,GAAQ3H,iBAAiB,SAAWH,IAChC,IAAIP,EAAWuI,KAAKC,MAAMjI,EAAMJ,MAChC2C,GAAO2F,GAAa,IAAIA,EAAWzI,MAGvCqI,GAAQ3H,iBAAiB,SAAWH,IAChC,IAAIP,EAAWuI,KAAKC,MAAMjI,EAAMJ,MAChC2C,GAAO2F,GAAaA,EAAU5D,IAAIR,GAC9BA,EAAEqE,KAAO1I,EAAS0I,GACZ1I,EACAqE,MAIdgE,GAAQ3H,iBAAiB,SAAWH,IAChC,IAAImI,EAAKnI,EAAMJ,KACf2C,GAAO2F,GAAaA,EAAU3D,OAAOT,GAAKA,EAAEqE,KAAOA,MAIhD,MAAMD,GAAY,CAAExK,OAtF3B0K,eAAsBxI,GAClB,IAAIgI,QAAiBT,MAAMM,EAAU,CACjCY,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMR,KAAKS,UAAU7I,KAGzB,GAAwB,MAApBgI,EAASR,OAAgB,CACzB,IAAIsB,QAAYd,EAASjI,OACzB,MAAM,IAAIgJ,qBAAqBf,EAASR,oBAAoBsB,MAEhE,IAAIP,QAAWP,EAASjI,OACxB4C,GAAO2F,GAAa,IAAIA,EAAW,CAAEC,GAAAA,EAAIvI,KAAAA,MA0EVgJ,QAvEnCR,eAAuBD,GACnB,IAAIP,QAAiBT,SAASM,KAAYU,IAAM,CAC5CE,OAAQ,WAEZ,GAAwB,MAApBT,EAASR,OAAgB,CACzB,IAAIsB,QAAYd,EAASjI,OACzB,MAAM,IAAIgJ,qBAAqBf,EAASR,oBAAoBsB,MAEhEnG,GAAO2F,IACH,MAAMzF,EAAIyF,EAAUW,UAAUhF,GAAKA,EAAEsE,KAAOA,GAE5C,IAAW,IAAP1F,EACA,MAAM,IAAIkG,6BAA6BR,mBAG3C,MAAO,IACAD,EAAU3G,MAAM,EAAGkB,MACnByF,EAAU3G,MAAMkB,EAAI,iBAsDS9D,GAAWmK,IAjDvDV,eAAmB3I,GACf,IAAI0I,GAAEA,EAAEvI,KAAEA,GAASH,EAEfmI,QAAiBT,SAASM,KAAYU,IAAM,CAC5CE,OAAQ,MACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMR,KAAKS,UAAU7I,KAGzB,GAAwB,MAApBgI,EAASR,OAAgB,CACzB,IAAIsB,QAAYd,EAASjI,OACzB,MAAM,IAAIgJ,qBAAqBf,EAASR,oBAAoBsB,MAEhEnG,GAAO2F,IACH,MAAMzF,EAAIyF,EAAUW,UAAUhF,GAAKA,EAAEsE,KAAOA,GAE5C,IAAW,IAAP1F,EACF,MAAM,IAAIkG,6BAA6BR,mBAGzC,MAAO,IACAD,EAAU3G,MAAM,EAAGkB,GACtBhD,KACGyI,EAAU3G,MAAMkB,EAAI,0GC1DbsG,88BAgBI/F,gCAfTgG,qFAEwBpJ,KAAKqJ,wCAGErJ,KAAKsJ,+CAGRtJ,KAAKuJ,gDAGHvJ,KAAKwJ,+DAZ9BL,qBAGmBnJ,KAAKqJ,0BAGErJ,KAAKsJ,mBAALtJ,KAAKsJ,2BAGRtJ,KAAKuJ,6BAGHvJ,KAAKwJ,kEA9BhD,aAAW3J,KAKX,MAAM4J,EAAWtI,2IAJdnB,EAAOH,EAASG,4BAChB0J,EAAwB,OAAhB7J,EAAS0I,uBACjBY,EAAQO,EAAQ,MAAQ,wCAI3B,SAAgBtJ,GACZA,EAAMuJ,iBAEFD,EACApB,GAAUxK,OAAOkC,GAAM+E,KAAK,IAAM0E,EAAS,SAE3CnB,GAAUY,IAAIrJ,GAAUkF,KAAK,IAAM0E,EAAS,8NLkOxD,IAAmB9I,WACE,MADFA,mBACOiJ,GAAajJ,mVMnM5BkJ,wBAAmBC,IAAIvB,mBAA5B9F,6UAAAA,oGAAAA,6CAAKoH,aN+5BX,SAA2BE,EAAYC,EAASC,EAASC,EAAS9G,EAAK+G,EAAM/F,EAAQjF,EAAMiL,EAASC,EAAmBC,EAAMC,GACzH,IAAItG,EAAI8F,EAAWtH,OACf+H,EAAIL,EAAK1H,OACTI,EAAIoB,EACR,MAAMwG,EAAc,GACpB,KAAO5H,KACH4H,EAAYV,EAAWlH,GAAGwB,KAAOxB,EACrC,MAAM6H,EAAa,GACbC,EAAa,IAAIlF,IACjBmF,EAAS,IAAInF,IAEnB,IADA5C,EAAI2H,EACG3H,KAAK,CACR,MAAMgI,EAAYN,EAAYnH,EAAK+G,EAAMtH,GACnCwB,EAAM4F,EAAQY,GACpB,IAAIhH,EAAQO,EAAO0G,IAAIzG,GAClBR,EAIIqG,GACLrG,EAAMV,EAAE6G,EAASa,IAJjBhH,EAAQwG,EAAkBhG,EAAKwG,IACzBnH,IAKViH,EAAW3D,IAAI3C,EAAKqG,EAAW7H,GAAKgB,GAChCQ,KAAOoG,GACPG,EAAO5D,IAAI3C,EAAK0G,KAAKC,IAAInI,EAAI4H,EAAYpG,KAEjD,MAAM4G,EAAY,IAAIzI,IAChB0I,EAAW,IAAI1I,IACrB,SAASnD,EAAOwE,GACZD,EAAcC,EAAO,GACrBA,EAAMW,EAAErF,EAAMmL,GACdlG,EAAO4C,IAAInD,EAAMQ,IAAKR,GACtByG,EAAOzG,EAAMsH,MACbX,IAEJ,KAAOvG,GAAKuG,GAAG,CACX,MAAMY,EAAYV,EAAWF,EAAI,GAC3Ba,EAAYtB,EAAW9F,EAAI,GAC3BqH,EAAUF,EAAU/G,IACpBkH,EAAUF,EAAUhH,IACtB+G,IAAcC,GAEdf,EAAOc,EAAUD,MACjBlH,IACAuG,KAEMG,EAAW7H,IAAIyI,IAKfnH,EAAOtB,IAAIwI,IAAYL,EAAUnI,IAAIwI,GAC3CjM,EAAO+L,GAEFF,EAASpI,IAAIyI,GAClBtH,IAEK2G,EAAOE,IAAIQ,GAAWV,EAAOE,IAAIS,IACtCL,EAASnI,IAAIuI,GACbjM,EAAO+L,KAGPH,EAAUlI,IAAIwI,GACdtH,MAfAmG,EAAQiB,EAAWjH,GACnBH,KAiBR,KAAOA,KAAK,CACR,MAAMoH,EAAYtB,EAAW9F,GACxB0G,EAAW7H,IAAIuI,EAAUhH,MAC1B+F,EAAQiB,EAAWjH,GAE3B,KAAOoG,GACHnL,EAAOqL,EAAWF,EAAI,IAC1B,OAAOE,2DMx+BLjI,sFAGWqH,IAAI9J,KAAKqJ,YACTS,IAAI9J,KAAKsJ,mBACTQ,IAAI9J,KAAKuJ,cACTO,IAAI9J,KAAKwJ,KAAO,IAAM,qhBAELgC,eACAC,4LANjB3B,IAAI9J,KAAKqJ,wCACTS,IAAI9J,KAAKsJ,+CACTQ,IAAI9J,KAAKuJ,0CACTO,IAAI9J,KAAKwJ,KAAO,IAAM,sIAejB1L,0GAJR+B,kCACD2J,8FADC3J,yIA7BTgK,WAAiB,sDA2Bb6B,yHNkHE3L,EAAK,uFM7IX8J,WAAWpH,sWAjCZ,IAAIiJ,GAAkB,EAClB7L,EAAW,GAcf,SAAS8L,EAAK7B,gBACVjK,EAAWiK,uBACX4B,GAAkB,GAMtB,SAAS1C,EAAQT,GACT1I,EAAS0I,KAAOA,wBAChBmD,GAAkB,gBAClB7L,EAAW,KAEfyI,GAAUU,QAAQT,8CAzBtB,wBACI1I,EAAW,CACP0I,GAAI,KACJvI,KAAM,CACFqJ,KAAM,GACNC,YAAa,GACbC,OAAQ,EACRC,MAAM,yBAGdkC,GAAkB,gBAMtB,+BACIA,GAAkB,gBAClB7L,EAAW,kTCKW+L,iLAFAC,+HAF2BC,oJAAAA,imBAD5CC,eAEKC,kBAEAC,sFAOTF,cAEKE,cAEAD,0zBAnCV,IAAIC,GAAaF,EACbC,GAAe,oDAEnB,4BACIA,GAAe,iBACfC,GAAY,uBAGhB,yBACIA,GAAY,oBACZD,GAAe,oCCbX,kEAAQ,CAChB9M,OAAQW,SAAS+I"}